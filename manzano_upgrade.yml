# THIS PLAYBOOK
# - stops all currently running nodes (YOU WILL GET KICKED)
# - UPGRADES THE OS
# - reinstalls lit-os (as if from scratch)
# - REBOOTS the machine so it comes up with the upgraded kernel
- name: Upgrade Debian, upgrade Litos, and reboot
  hosts: all
  become: yes
  gather_facts: true

  pre_tasks:
    - name: Print Kernel Version
      debug:
        msg: "Kernel Version is {{ ansible_kernel }}"
    - name: Print OS Version
      debug:
        msg: "OS Version is {{ ansible_distribution }} {{ ansible_distribution_version }}"    
    - name: Get BIOS Revision
      become: true
      command: dmidecode -t bios
      register: bios_revision
    - name: Extract BIOS Revision
      set_fact:
        bios_revision_line: "{{ bios_revision.stdout_lines | select('search', 'BIOS Revision') | regex_search('([0-9.]+)') }}"
        bios_vendor_line: "{{ bios_revision.stdout_lines | select('search', 'Vendor') | map('trim') | join('') }}"
    - name: Fail if outdated BIOS
      fail:
        msg: "Please manually upgrade your machine's BIOS\nLeaseweb: 2.15.3 or newer from https://www.dell.com/support/home/en-us/product-support/product/poweredge-r6515/drivers\nOVH: 5.22 or newer"
      when: "('American Megatrends International' in bios_vendor_line and bios_revision_line is version('5.22', '<')) or ('Dell Inc' in bios_vendor_line and bios_revision_line is version('2.15.3', '<'))"
    - name: Ensure secrets.sls exists (must create manually, follow  https://litprotocol.notion.site/Manzano-Testnet-b12d823343384a8b827cb3d803ee940d?pvs=4)
      stat:
        path: /root/.salt-local/secrets.sls
      register: secrets_file
      failed_when: "not secrets_file.stat.exists"

  tasks:
    - name: Stop running nodes
      include_tasks: tasks/stop_all_instances.yml

    - name: Upgrade Debian packages
      include_tasks: tasks/upgrade_debian.yml

    - name: Upgrade Litos packages
      include_tasks: tasks/upgrade_litos_manzano.yml

    - name: Print network info before reboot
      block:
        - name: Read the /etc/network/interfaces file
          command: grep 'en' /etc/network/interfaces
          register: grep_output
          ignore_errors: yes
        - name: Print grep output
          debug:
            msg: "{{ grep_output.stdout_lines }}"
        - name: Check status of systemd-networkd service
          command: systemctl status systemd-networkd
          register: networkd_status
          failed_when: false
        - name: Print status of systemd-networkd service
          debug:
            msg: "systemd-networkd status: {{ networkd_status.stdout }}"
        - name: Check status of networking service
          command: systemctl status networking
          register: networking_status
          failed_when: false
        - name: Print status of networking service
          debug:
            msg: "networking status: {{ networking_status.stdout }}"

    # Note: May be better to do the reboot manually
    # - name: Reboot the system if upgrades were made
    #   include_tasks: tasks/reboot.yml

  post_tasks:
    - name: Print Kernel Version
      debug:
        msg: "Kernel Version is {{ ansible_kernel }}"
    - name: Print OS Version
      debug:
        msg: "OS Version is {{ ansible_distribution }} {{ ansible_distribution_version }}"
